<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cqupt.nmid.mailbook.dao.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="cn.edu.cqupt.nmid.mailbook.pojo.Book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="degree" jdbcType="REAL" property="degree" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="incover" jdbcType="VARCHAR" property="incover" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="ishandled" jdbcType="TINYINT" property="ishandled" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, name, publisher, price, degree, time, description, cover, incover, 
    type, ishandled
  </sql>
  <select id="selectByExample" parameterType="cn.edu.cqupt.nmid.mailbook.pojo.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.cqupt.nmid.mailbook.pojo.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.cqupt.nmid.mailbook.pojo.Book">
    insert into book (id, username, name, 
      publisher, price, degree, 
      time, description, cover, 
      incover, type, ishandled
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{publisher,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{degree,jdbcType=REAL}, 
      #{time,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, 
      #{incover,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{ishandled,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.cqupt.nmid.mailbook.pojo.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="incover != null">
        incover,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="ishandled != null">
        ishandled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=REAL},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="incover != null">
        #{incover,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="ishandled != null">
        #{ishandled,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.cqupt.nmid.mailbook.pojo.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=REAL},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.cover != null">
        cover = #{record.cover,jdbcType=VARCHAR},
      </if>
      <if test="record.incover != null">
        incover = #{record.incover,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.ishandled != null">
        ishandled = #{record.ishandled,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      degree = #{record.degree,jdbcType=REAL},
      time = #{record.time,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      cover = #{record.cover,jdbcType=VARCHAR},
      incover = #{record.incover,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      ishandled = #{record.ishandled,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.cqupt.nmid.mailbook.pojo.Book">
    update book
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=REAL},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="incover != null">
        incover = #{incover,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="ishandled != null">
        ishandled = #{ishandled,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.cqupt.nmid.mailbook.pojo.Book">
    update book
    set username = #{username,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      degree = #{degree,jdbcType=REAL},
      time = #{time,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      incover = #{incover,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      ishandled = #{ishandled,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>